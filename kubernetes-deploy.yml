apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  MONGO_URL: "mongodb://mongo-service:27017/mydatabase"
  REDIS_HOST: "redis-service"
  RABBITMQ_URL: "amqp://guest:guest@rabbitmq-service:5672/"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "myuser"
        - name: RABBITMQ_DEFAULT_PASS
          value: "mypassword"
        ports:
        - containerPort: 5672
        - containerPort: 15672
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
---
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  selector:
    app: rabbitmq
  ports:
  - name: amqp      
    port: 5672
    targetPort: 5672
  - name: management 
    port: 15672
    targetPort: 15672


---
# MongoDB PVC & Deployment
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---
# Redis PVC & Deployment
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# Producer Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
spec:
  replicas: 1  # Producer는 하나만 실행
  selector:
    matchLabels:
      app: producer
  template:
    metadata:
      labels:
        app: producer
    spec:
      containers:
      - name: producer
        image: wingseter/producer:latest  
        imagePullPolicy: IfNotPresent
        env:
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"

---
# Worker 1 Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker1
  template:
    metadata:
      labels:
        app: worker1
    spec:
      containers:
      - name: worker
        image: wingseter/worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: WORKER_PORT
          value: "8001"
        - name: WORKER_ID
          value: "worker1"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
---
# Worker 2 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker2
  template:
    metadata:
      labels:
        app: worker2
    spec:
      containers:
      - name: worker
        image: wingseter/worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: WORKER_PORT
          value: "8002"
        - name: WORKER_ID
          value: "worker2"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
---
# Worker 3 Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker3
  template:
    metadata:
      labels:
        app: worker3
    spec:
      containers:
      - name: worker
        image: wingseter/worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: WORKER_PORT
          value: "8003"
        - name: WORKER_ID
          value: "worker3"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"

---
# Grafana Deployment & Service
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
