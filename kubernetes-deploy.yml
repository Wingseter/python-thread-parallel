apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:7.0.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
      nodePort: 30017
  selector:
    app: mongo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "test"
            - name: RABBITMQ_DEFAULT_PASS
              value: "test"
          ports:
            - containerPort: 5672
            - containerPort: 15672

---

apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
      nodePort: 30072
    - name: management
      port: 15672
      targetPort: 15672
      nodePort: 31672
  selector:
    app: rabbitmq

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
      nodePort: 30990
  selector:
    app: prometheus

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          ports:
            - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: NodePort
  ports:
    - name: grafana
      port: 3000
      targetPort: 3000
      nodePort: 30300
  selector:
    app: grafana
