services:
  db:
    image: mongo:7.0.0
    container_name: db
    ports:
      - "27017:27017"
    restart: always

  rabbitmq1:
    image: rabbitmq:3-management
    container_name: rabbitmq1
    hostname: rabbitmq1
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_ERLANG_COOKIE=mysupersecretcookie
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    volumes:
      - rabbitmq1_data:/var/lib/rabbitmq
    restart: always
    command: >
      /bin/sh -c "
      rabbitmq-server -detached;
      sleep 5;
      rabbitmqctl set_policy ha-all '.*' '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}';
      tail -f /dev/null"


  rabbitmq2:
    image: rabbitmq:3-management
    container_name: rabbitmq2
    hostname: rabbitmq2
    environment:
      - RABBITMQ_ERLANG_COOKIE=mysupersecretcookie
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    depends_on:
      - rabbitmq1
    command: >
      /bin/sh -c "rabbitmq-server -detached;
                  sleep 5;
                  rabbitmqctl stop_app;
                  rabbitmqctl join_cluster rabbit@rabbitmq1;
                  rabbitmqctl start_app;
                  tail -f /dev/null"
    ports:
      - "5673:5672"   
      - "15673:15672"
    volumes:
      - rabbitmq2_data:/var/lib/rabbitmq
    restart: always

  rabbitmq3:
    image: rabbitmq:3-management
    container_name: rabbitmq3
    hostname: rabbitmq3
    environment:
      - RABBITMQ_ERLANG_COOKIE=mysupersecretcookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    depends_on:
      - rabbitmq1
    command: >
      /bin/sh -c "rabbitmq-server -detached;
                  sleep 5;
                  rabbitmqctl stop_app;
                  rabbitmqctl join_cluster rabbit@rabbitmq1;
                  rabbitmqctl start_app;
                  tail -f /dev/null"
    ports:
      - "5674:5672"   
      - "15674:15672"   
    volumes:
      - rabbitmq3_data:/var/lib/rabbitmq
    restart: always

  worker1:
    build: 
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker1
    environment:
      - RABBIT_HOST1=rabbitmq1
      - RABBIT_HOST2=rabbitmq2
      - RABBIT_HOST3=rabbitmq3
      - RABBIT_PORT1=5672
      - RABBIT_PORT2=5672
      - RABBIT_PORT3=5672
      - MONGO_HOST=db
      - MONGO_PORT=27017
      - WORKER_PORT=8001
      - WORKER_ID=worker1
      - REMOTE_PORT=9001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_USER=test
      - RABBITMQ_PASS=test
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "9001:9001"  
    networks:
      - default
    depends_on:
      - loki
    restart: always

  worker2:
    build: 
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker2
    environment:
      - WORKER_PORT=8002
      - WORKER_ID=worker2
      - REMOTE_PORT=9002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=db
      - MONGO_PORT=27017
      - RABBIT_HOST1=rabbitmq1
      - RABBIT_HOST2=rabbitmq2
      - RABBIT_HOST3=rabbitmq3
      - RABBIT_PORT1=5672
      - RABBIT_PORT2=5672
      - RABBIT_PORT3=5672
      - RABBITMQ_USER=test
      - RABBITMQ_PASS=test
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "9002:9002"  
    networks:
      - default
    depends_on:
      - loki
    restart: always

  worker3:
    build: 
      context: .
      dockerfile: Dockerfile.worker
    container_name: worker3
    environment:
      - WORKER_PORT=8003
      - WORKER_ID=worker3
      - REMOTE_PORT=9003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=db
      - MONGO_PORT=27017
      - RABBIT_HOST1=rabbitmq1
      - RABBIT_HOST2=rabbitmq2
      - RABBIT_HOST3=rabbitmq3
      - RABBIT_PORT1=5672
      - RABBIT_PORT2=5672
      - RABBIT_PORT3=5672
      - RABBITMQ_USER=test
      - RABBITMQ_PASS=test
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    ports:
      - "9003:9003"  
    networks:
      - default
    depends_on:
      - loki
    restart: always

  producer:
    build: 
      context: .
      dockerfile: Dockerfile.producer
    container_name: producer
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBIT_HOST1=rabbitmq1
      - RABBIT_HOST2=rabbitmq2
      - RABBIT_HOST3=rabbitmq3
      - RABBIT_PORT1=5672
      - RABBIT_PORT2=5672
      - RABBIT_PORT3=5672
    networks:
      - default
    depends_on:
      - loki
    restart: always

  loki:
    image: grafana/loki:3.0.0
    container_name: loki
    volumes:
      - ./configs/loki-config.yaml:/mnt/config/loki-config.yaml
      - ./data:/loki
    ports:
      - "3100:3100"
    command: -config.file=/mnt/config/loki-config.yaml

  promtail:
    image: grafana/promtail:3.0.0
    container_name: promtail
    volumes:
      - ./configs/promtail-config.yaml:/mnt/config/promtail-config.yaml
      - /var/log:/var/log
    depends_on:
      - loki
    command: -config.file=/mnt/config/promtail-config.yaml

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
    depends_on:
      - loki
  
  redis:
    image: redis:7.0
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./configs/redis.conf:/usr/local/etc/redis/redis.conf 
      - ./redis-data:/data
    restart: always
    
volumes:
  rabbitmq1_data:
  rabbitmq2_data:
  rabbitmq3_data: